@model List<ML.Importation.OrderDerived>
@{
    ViewData["Title"] = "Orders";
    var fol_gtm = ViewData["FolioGtm"]?.ToString();
    var piezas = int.Parse(ViewData["PiezasMadre"]?.ToString() ?? "0");
}

<div class="container-fluid mt-1 px-2">
    <h2 class="mb-4 text-primary fw-bold">Hijas posibles a dividir</h2>

    <div class="d-flex justify-content-end mb-4">
        <button class="btn btn-secondary px-4" onclick="history.back()">
            <i class="bi bi-arrow-left"></i> Volver
        </button>
    </div>

    @if (Model.Count > 0)
    {
        <div class="bg-light border rounded-3 p-3 mb-4">
            <div class="row">
                <div class="col-md-6">
                    <p class="mb-1"><strong>Folio GTM:</strong> @fol_gtm</p>
                </div>
                <div class="col-md-6">
                    <p class="mb-1"><strong>Piezas Madre:</strong> @piezas</p>
                </div>
            </div>
        </div>

        <form id="formDivide" method="post" asp-action="InsertSplit" asp-controller="Importations" class="shadow-sm p-4 rounded-3 bg-white">
            <input type="hidden" name="fol_gtm" value="@fol_gtm" />
            <input type="hidden" name="oc_madre" value="@Model.First().ocorig" />
            <input type="hidden" name="oc_hijas" value="" />

            <div class="d-flex justify-content-between align-items-center mb-3">
                <button type="submit" class="btn btn-primary" id="btnEnviar" disabled>
                    <i class="bi bi-send"></i> Enviar
                </button>
                <span class="fw-semibold text-secondary">
                    Total piezas seleccionadas: <strong id="sumaPiezas" class="text-dark">0</strong> / @piezas
                </span>
            </div>

            <div class="table-responsive">
                <table class="table table-hover table-bordered align-middle mb-0">
                    <thead class="table-dark">
                        <tr>
                            <th style="width: 60px;" class="text-center">#</th>
                            <th>Orden Madre</th>
                            <th>Orden Hija</th>
                            <th>Piezas</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td class="text-center">
                                    <input type="checkbox" name="hijas" value="@order.num_ped" data-piezas="@order.cant_distribu" />
                                </td>
                                <td>@order.ocorig</td>
                                <td>@order.num_ped</td>
                                <td>@order.cant_distribu</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </form>
    }
    else
    {
        <div class="alert alert-danger mt-4" role="alert">
            No hay órdenes relacionadas.
        </div>
    }
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("formDivide");
            const checkboxes = document.querySelectorAll('input[name="hijas"]');
            const btnEnviar = document.getElementById("btnEnviar");
            const sumaPiezasEl = document.getElementById("sumaPiezas");
            const piezasMadre = parseInt("@piezas");

            function validarFormulario() {
                let suma = 0;
                let seleccionadas = 0;

                checkboxes.forEach(cb => {
                    if (cb.checked) {
                        seleccionadas++;
                        suma += parseInt(cb.dataset.piezas || "0");
                    }
                });

                sumaPiezasEl.textContent = suma;
                btnEnviar.disabled = !(seleccionadas >= 2 && suma === piezasMadre);
            }

            checkboxes.forEach(cb => {
                cb.addEventListener("change", validarFormulario);
            });

            validarFormulario();

            form.addEventListener("submit", function (e) {
                e.preventDefault();

                const formData = new FormData(form);
                const ocHijas = Array.from(checkboxes)
                    .filter(cb => cb.checked)
                    .map(cb => cb.value)
                    .join(',');

                formData.set("oc_hijas", ocHijas);

                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) throw new Error("Respuesta no válida");
                    return response.json();
                })
                .then(data => {
                    const modalHtml = `
                        <div class="modal fade" id="resultModal" tabindex="-1" aria-labelledby="resultModalLabel" aria-hidden="true">
                          <div class="modal-dialog">
                            <div class="modal-content">
                              <div class="modal-header bg-${data.success ? 'success' : 'danger'} text-white">
                                <h5 class="modal-title" id="resultModalLabel">${data.success ? 'Éxito' : 'Error'}</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                              </div>
                              <div class="modal-body">
                                ${data.message}
                              </div>
                              <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" id="closeAndGoBack">Volver</button>
                              </div>
                            </div>
                          </div>
                        </div>`;

                    document.querySelectorAll("#resultModal").forEach(m => m.remove());
                    document.body.insertAdjacentHTML('beforeend', modalHtml);

                    const resultModal = new bootstrap.Modal(document.getElementById('resultModal'));
                    resultModal.show();


                     document.getElementById("closeAndGoBack").addEventListener("click", () => {
                        resultModal.hide();
                        window.history.back();
                    });


                })
                .catch(err => {
                    alert("Error al enviar el formulario: " + err);
                });
            });
        });
    </script>
}
