@model List<ML.TrackingManager.TrackingManager>
@{
    ViewData["Title"] = "Órdenes Devueltas";
}

<div class="container-fluid mt-1 px-2">
    <h2 class="mb-4 text-primary fw-bold">
        <i class="bi bi-box-arrow-in-left me-2"></i>Órdenes Devueltas
    </h2>

    <form id="token-form">
        @Html.AntiForgeryToken()
    </form>

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0 fs-6 fw-semibold">Listado de Órdenes Devueltas</h5>
            <button id="btnRefrescar" class="btn btn-sm btn-light" onclick="location.reload()" title="Actualizar">
                <i class="bi bi-arrow-clockwise text-primary"></i>
            </button>
        </div>

        <div class="card-body" style="max-height: 80vh; overflow-y: auto;">
            @if (Model != null && Model.Count > 0)
            {
                <div class="row g-3">
                    @foreach (var orden in Model)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="card order-card border-start border-4 border-danger shadow-sm">
                                <div class="card-body py-3 px-4">
                                    <div class="order-header mb-2 fw-bold fs-5 text-danger">
                                        <i class="bi bi-box-arrow-in-left me-2"></i>
                                        @orden.cliente (@orden.ord_rel)
                                    </div>

                                    <div class="row small">
                                        <div class="col-6">
                                            <strong>Ruta:</strong> @orden.car_sal
                                        </div>
                                        <div class="col-6">
                                            <strong>Fec. Carga:</strong> @orden.fec_car
                                        </div>
                                        <div class="col-6">
                                            <strong>Fec. Actual:</strong> @orden.fec_act
                                        </div>
                                        <div class="col-6">
                                            <strong>Estatus:</strong> @orden.estatus_ord_rel
                                        </div>
                                        <div class="col-12 mt-2">
                                            <strong>Motivo:</strong> @orden.motivo
                                        </div>
                                    </div>

                                    <div class="mt-3 d-flex justify-content-between">
                                        <button class="btn btn-primary w-100"
                                                onclick="verDetalleApi('@orden.ord_rel')">
                                            <i class="bi bi-eye me-1"></i> Ver Detalle
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info text-center">No se encontraron órdenes devueltas.</div>
            }
        </div>
    </div>
</div>

<!-- Modal de Detalle -->
<div class="modal fade" id="detalleOrdenModal" tabindex="-1" aria-labelledby="detalleOrdenModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detalleOrdenModalLabel">Detalle de Orden</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="detalleOrdenModalBody">
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .order-card {
            border-radius: 1rem;
            transition: all 0.2s ease-in-out;
            background: #fff;
        }

            .order-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.12);
            }

        .order-header {
            font-weight: 600;
            color: #b30000;
            border-bottom: 1px solid rgba(0,0,0,0.08);
            padding-bottom: 0.3rem;
            margin-bottom: 0.7rem;
        }

        .btn-primary {
            border-radius: 0.7rem;
            transition: all 0.2s ease-in-out;
        }

            .btn-primary:hover {
                opacity: 0.9;
                transform: scale(1.03);
            }
    </style>
}

@section Scripts {
    <script>
        async function verDetalleApi(ord_rel) {
            try {
                const responseCredentials = await fetch("/OracleData/GetCredentials");
                const dataCredentials = await responseCredentials.json();

                const username = dataCredentials.username;
                const password = dataCredentials.password;

                const responseEndPoint = await fetch("/OracleData/GetEndPointOLPN");
                const dataEndPoint = await responseEndPoint.json();

                const finalUrl = dataEndPoint.endPoint.replace("ORDER_RELEASE", encodeURIComponent(ord_rel));

                $.ajax({
                    url: finalUrl,
                    method: "GET",
                    headers: {
                        "Authorization": "Basic " + btoa(username + ":" + password),
                        "Content-Type": "application/json"
                    },
                    success: function (data) {
                        if (data && data.results && data.results.length > 0) {
                            mostrarDetalleEnModal(data.results, ord_rel);
                        } else {
                            mostrarDetalleEnModal([], ord_rel);
                        }
                    },
                    error: function (xhr, status, error) {
                        const msg = `<div class="text-danger">Error al obtener detalle: ${xhr.status} ${xhr.statusText}</div>`;
                        document.getElementById("detalleOrdenModalBody").innerHTML = msg;
                        bootstrap.Modal.getOrCreateInstance(document.getElementById('detalleOrdenModal')).show();
                    }
                });

            } catch (err) {
                document.getElementById("detalleOrdenModalBody").innerHTML =
                    `<div class="text-danger">Error inesperado: ${err.message}</div>`;
                bootstrap.Modal.getOrCreateInstance(document.getElementById('detalleOrdenModal')).show();
            }
        }

        function mostrarDetalleEnModal(detalles, ord_rel) {
            let html = `<h6>Orden: ${ord_rel}</h6>
                        <table class="table table-bordered mt-3">
                            <thead>
                                <tr>
                                    <th>Producto</th>
                                    <th>SKU</th>
                                    <th>OLPN</th>
                                    <th>Cantidad</th>
                                </tr>
                            </thead>
                            <tbody>`;

            if (!detalles || detalles.length === 0) {
                html += `<tr><td colspan="4" class="text-center">No hay detalles disponibles.</td></tr>`;
            } else {
                detalles.forEach(d => {
                    html += `<tr>
                                <td>${d.Product}</td>
                                <td>${d.Sku}</td>
                                <td>${d.Olpn}</td>
                                <td>${d.Quantity}</td>
                            </tr>`;
                });
            }

            html += `</tbody></table>`;

            document.getElementById("detalleOrdenModalBody").innerHTML = html;
            bootstrap.Modal.getOrCreateInstance(document.getElementById('detalleOrdenModal')).show();
        }
    </script>
}
